name: Build the Linux Assembly (ARM64)
on:
  release:
    types: [published]
  workflow_dispatch:
jobs:
  compile_job:
    name: build_linux_assembly (arm64)
    runs-on: ubuntu-latest
    steps:
      - run: echo "Starting job triggered by a ${{ github.event_name }} event on a ${{ runner.os }} server hosted by GitHub."
      - run: echo "Checking out ${{ github.repository }} on branch ${{ github.ref }}."

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          set-safe-directory: true
          path: adamant_example

      - name: Clone adamant repository
        uses: actions/checkout@v4
        with:
          set-safe-directory: true
          repository: lasp/adamant
          path: adamant

      - name: Build the Linux binary
        run: |
          docker run --rm --platform linux/arm64 \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            -e TMPDIR=/tmp \
            -e ADAMANT_TMP_DIR=/tmp/.adamant \
            ghcr.io/lasp/adamant_example:0.1 \
            bash adamant_example/env/github_run.sh "redo adamant_example/src/assembly/linux/main/build/bin/Linux/main.elf"
        # NOTE: TMPDIR and ADAMANT_TMP_DIR must be set to the container's native filesystem (/tmp)
        # rather than the volume-mounted workspace. This prevents cross-device I/O errors with the
        # redo build system's unqlite database and Python's shutil.move() operations.

      - name: Archive Linux binary
        uses: actions/upload-artifact@v4
        with:
          name: linux_elf_arm64
          path: ${{ github.workspace }}/adamant_example/src/assembly/linux/main/build/bin/Linux/main.elf
          if-no-files-found: error

      - run: echo "Finished with status - ${{ job.status }}."
